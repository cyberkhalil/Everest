TODO :-
* Teacher (
    gui{ edit_teachers }
)
* Student (
    gui{ add_student ,edit_students }
)
* Student Books (
    classes{ 
        StudentUtil{ buy_book ,getStudentBooks } 
        ,BookUtil{ getSoldBooks } 
    } 
    ,gui{ Display_sold_books ,Display_student_books } 
)
* Student Exams (classes ,gui{ Display_student_exams ,Display_exam_students } )
* Student Courses (classes ,gui{ Display_courses_enrollments ,Display_student_courses } )
* Teacher Courses (classes ,gui)
* Purchases for Students & Teachers (sql( purchases_view ) ,classes ,gui)
* Invoice for Students & Teachers (sql ,classes ,gui)
* Invoice to pdf (classes ,gui)
* Secretary Frame (gui)
* check maximum number of characters in classes and implement proper GUI exception therefore.
* check a proper conversion between integer in mysql & java or use String instead.
* make program execute sql if there is not everest user implemented.
* modularize PromoteExamDateFrame to promoteDate method in GUI_Util class.
* check startDate always before endDate in everything.
* TODO 1